#!/bin/bash
###
##
##
#
pwd=$(pwd)
read -p "yum本地仓库是否可用(yes|no)"  pp
if [ $pp  =   ]
then 
   pp=yes
fi


if [ $pp  =  no  ]
then 
 echo "请先启用yum的本地源仓库后再继续！"
  exit 
fi



#检测源码包解压的编译环境
echo "正在检测http所依赖的编译环境！"
#
rpm -q gcc &>/dev/null
if [ $? -ne 0 ]
then 
  yum -y install  gcc  &>/dev/null
fi
#
rpm -q gcc-c++  &>/dev/null
if [ $? -ne 0  ]
then 
 yum -y install  gcc-c++ &>/dev/null
fi 
#
rpm -q make  &>/dev/null
if [ $? -ne 0  ]
then  
yum -y install make &>/dev/null
fi 
#提示用户正在安装

read -p "请输入源码安装的版本号(默认：2.4.37),如果不是默认版本号，请将源码包移动到$pwd下 !:" bbh

echo $bbh |grep ^[0-9].* &>/dev/null
if [ $? -ne  0  ]
then 
  bbh=2.4.37
fi 



echo "正在源码安装httpd服务！"
echo "源码包将会解压到/usr/src下！"
  $(which tar)  xf  $pwd/httpd-${bbh}.tar.gz   -C /usr/src


#检测http所依赖的软件包！
echo "正在安装http所依赖的软件包！"
yum -y  install  apr*  pcre* &>/dev/null


#安装到/usr/local/apache
echo "正在安装请耐心等待！！"
cd /usr/src/httpd-${bbh}
./configure --prefix=/usr/local/apache &>/dev/null
if [ $? -ne 0  ]
then 
 echo "脚本安装失败，请到/usr/src/httpd-${bbh}下手动检测"
  sleep 2
 exit 
fi

#编译
echo " "
echo "正在编译请耐心等待！"
make &>/dev/null  && make install  &>/dev/null 
if [ $? -ne 0  ]
then 
 echo "脚本编译失败，请到/usr/src/httpd-${bbh}下手动检测"
 sleep 2
 exit 
fi 

#开启服务的主配置文件的端口
cp /usr/local/apache/conf/httpd.conf  /usr/local/apache/conf/httpd.conf.bak
echo "正在修改主配置文件,已将主配置文件备份到主配置文件的所在目录"
echo "ServerName www.example.com:80" >> /usr/local/apache/conf/httpd.conf

#启动服务
echo "正在启动httpd服务"
cd /usr/local/apache/bin
./apachectl  start &>/dev/null  

#判断服务是否已经启动
netstat  -anpt |grep :80 &>/dev/null
if [ $? -ne 0  ]
then 
  echo "服务启动失败，请手动检测！"
else 
  echo "服务启动成功，请放心使用！"
fi















