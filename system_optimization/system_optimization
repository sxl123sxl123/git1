#!/bin/bash
#一键完成系统优化
#提醒用户的在优化过程耐心等待
 echo -e "\033[33m                            本次优化中一些服务需要时间，请耐心等待，请勿推出！ \033[0m"
 sleep 2 

#测试网络的连通性
echo  "正在检测网络连通性！ "
ping  -w 1  -c 1  119.75.217.26   &>/dev/null
if   [ $? -ne 0   ]
 then  
   echo  "本次服务需要网络！请检测网络连通性！正在退出服务!"
   sleep 1
   exit 
fi 
 


#将系统的selinux关闭设置为开机不启动
 sleep  1
echo "正在关闭selinux，并且开机不启动！"
setenforce 0 

cat  <<  EOF  >/etc/sysconfig/selinux
# This file controls the state of SELinux on the system.
# SELINUX= can take one of these three values:
#     enforcing - SELinux security policy is enforced.
#     permissive - SELinux prints warnings instead of enforcing.
#     disabled - No SELinux policy is loaded.
SELINUX=disable 
# SELINUXTYPE= can take one of three two values:
#     targeted - Targeted processes are protected,
#     minimum - Modification of targeted policy. Only selected processes are protected. 
#     mls - Multi Level Security protection.
SELINUXTYPE=targeted
EOF
sleep 1

#设置开启动级别
echo "正在设置系统默认启动级别，设置为3级别，仅字符界面多用户终端！"
systemctl  set-default  multi-user.target  &>/dev/null
sleep 1

#光驱开机自动挂载到/media/cdrom
echo "光驱开机会自动挂载到/media/cdrom下"
[ -d /media/cdrom  ]  ||  mkdir /media/cdrom 
umount /dev/sr0  &>/dev/null
mount /dev/sr0  /media/cdrom/   &>/dev/null
echo "  /dev/sr0   /media/cdrom   iso9660  defaults   0 0 " >> /etc/fstab
sleep 1

#建立yum本地仓库
echo  "正在建立yum的本地的仓库！"
cd /etc/yum.repos.d/
[ -d /etc/yum.repos.d/bak  ] || mkdir  /etc/yum.repos.d/bak 
mv *r* bak
cat << EOF > local.repo
[c7-media]
name=CentOS-$releasever - Media
baseurl=file:///media/CentOS/
        file:///media/cdrom/
        file:///media/cdrecorder/
gpgcheck=1
enabled=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
EOF
yum  clean all  &>/dev/null   &&   yum  makecache &>/dev/null 
cd 
rpm  --import  /media/cdrom/*K*
sleep 1

#构建yum的阿里云源仓库！
which wget  &>/dev/null
if [ $? -eq 1  ]
 then
 yum -y install wget &>/dev/null
fi

   
 
echo "正在构建阿里云源仓库！"
  [ -f /etc/yum.repos.d/bak/CentOS-Base.repo ]
if [ $? -eq  0  ]
  then
    cp /etc/yum.repos.d/bak/CentOS-Base.repo  /etc/yum.repos.d/
    wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo &>/dev/null
else
cat << EOF >/etc/yum.repos.d/CentOS-Base.repo
[base]
name=CentOS-$releasever - Base
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=os&infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/os/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

#released updates
[updates]
name=CentOS-$releasever - Updates
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=updates&infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/updates/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

#additional packages that may be useful
[extras]
name=CentOS-$releasever - Extras
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=extras&infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/extras/$basearch/
gpgcheck=1
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7

#additional packages that extend functionality of existing packages
[centosplus]
name=CentOS-$releasever - Plus
mirrorlist=http://mirrorlist.centos.org/?release=$releasever&arch=$basearch&repo=centosplus&infra=$infra
#baseurl=http://mirror.centos.org/centos/$releasever/centosplus/$basearch/
gpgcheck=1
enabled=0
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-CentOS-7
EOF

wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo &>/dev/null
fi
yum clean all &>/dev/null && yum makecache &>/dev/null


#安装系统所需要的必要软件包
sleep 1
echo  "正在安装系统所需要的必要软件包！"
 yum -y install     gcc gcc-c++ cmake bzip2-devel curl-devel db4-devel libjpeg-devel libpng-devel freetype-devel libXpm-devel gmp-devel libc-client-devel openldap-devel unixODBC-devel postgresql-devel sqlite-devel aspell-devel net-snmp-devel libxslt-devel libxml2-devel pcre-devel mysql-devel libmemcached zlib-devel vim wget lrzsz tree elinks openssl-devel curl lynx make net-tools  ntpdate   &>/dev/null  


#设置服务器自动更新时间
 echo "正在设置服务每隔五分钟会自动做一次时间同步！"
 rpm -q  cronie  &>/dev/null 
if  [ $? -ne 0  ] 
 then 
  yum -y install  cronie  &>/dev/null
fi 

  systemctl  enable  crond 

cat << EOF >/var/spool/cron/root
*/5	*	*	*	*	/usr/sbin/ntpdate -u pool.ntp.org;/usr/sbin/hwclock -w
EOF

chmod 600  /var/spool/cron/root

#将系统的关键文件加锁
sleep 1
echo   "正在枷锁系统的关键文件！"
chattr +i  /etc/passwd  /etc/shadow  /etc/gshadow  /etc/group  &>/dev/null 

#设置系统的命令历史记录为200条自动注销时间为360秒
sleep 1
echo "正在设置系统的命令历史纪录保存为200条，等待时间为360秒！开机自动清除命令历史纪录！"
echo "HISTSIZE=200
TMOUNT=360" >>/etc/profile
cat << EOF >>/root/.bash_logout
history -c
clear
echo "Make a joke on you!" >>/root/.bash_history
EOF


#禁用ctrl+alt+del 重启热键
sleep 1
echo "正在禁用ctrl+alt+del 重启热键！"
systemctl mask ctrl-alt-del.target  &>/dev/null 
systemctl daemon-reload 

#限制root用户只能在tty6终端登录
sleep 1
echo "已经设置root用户只能在tty6终端登陆系统！"
cat  << EOF >/etc/securetty
console
vc/1
vc/2
vc/3
vc/4
vc/5
vc/6
vc/7
vc/8
vc/9
vc/10
vc/11
tty1
console
vc/1
vc/2
vc/3
vc/4
vc/5
vc/6
vc/7
vc/8
vc/9
vc/10
vc/11
#tty1
#tty2
#tty3
#tty4
#tty5
tty6
tty7
tty8
tty9
tty10
tty11
ttyS0
ttysclp0
sclp_line0
3270/tty1
hvc0
hvc1
hvc2
hvc3
hvc4
hvc5
hvc6
hvc7
hvsi0
hvsi1
hvsi2
xvc0
EOF


#设置只有wheel组中的用户可以使用su命令
sleep 1 
echo "正在设置只有wheel组中的用户可以使用su切换用户命令！"
cat << EOF >/etc/pam.d/su
#%PAM-1.0
auth            sufficient      pam_rootok.so
# Uncomment the following line to implicitly trust users in the "wheel" group.
#auth           sufficient      pam_wheel.so trust use_uid
# Uncomment the following line to require a user to be in the "wheel" group.
auth            required        pam_wheel.so use_uid
auth            substack        system-auth
auth            include         postlogin
account         sufficient      pam_succeed_if.so uid = 0 use_uid quiet
account         include         system-auth
password        include         system-auth
session         include         system-auth
session         include         postlogin
session         optional        pam_xauth.so
EOF


#设置服务器的中文字符集
sleep 1
echo  "正在设置服务器的中文字符集！"
rpm -q kde-l10n-Chinese  &>/dev/null
if [ $? -ne 0  ]
 then  
   yum -y install  kde-l10n-Chinese &>/dev/null
fi 

rpm -q glibc-common &>/dev/null
if [ $? -eq 0  ]
 then 
  rpm -e glibc-common --nodeps &>/dev/null
  yum -y install  glibc-common  &>/dev/null
 else
  yum -y install  glibc-common  &>/dev/null
fi

echo "LANG=zh_CN.UTF-8" >/etc/locale.conf 
source  /etc/locale.conf  &>/dev/null


#清楚系统登录时显示内核版本信息！
sleep  1
 echo "正在清除系统登陆时显示内核版本信息！"
 echo "" >/etc/rehat-release
 echo "" >/etc/issue


#用户登陆时显示磁盘、内存、登陆服务器的用户、负载平均值等情况
sleep 1
echo "正在设置用户登陆系统时显示磁盘、内存、登陆服务器的用户、负载平均值等情况！"

cat   <<  EOF>>/etc/profile
echo -n "根目录的使用情况："
df -Th |grep -w    / |awk '{print \$6}'
echo -n "当前登录用户："
whoami
gs=\$(w |wc -l)
yh=\$(expr \$gs - 2)
echo  -n  "当前系统登陆的用户有\$yh个"
echo -n   "其中以tty终端登录的有："
w|awk '/tty/{print \$1}'
echo -n   "其中以pts终端登录的有："
w|awk '/pts/{print \$1}'
echo -n "内存使用率："
free |awk -F" " '/Mem:/{print int(\$3*100/\$2)"%" }'
echo -n "cpu使用情况:"
top -b  -n 1 |awk '/Cpu/{print  }'
echo -n "负载平均值："
w |awk '/average:/{print "load average: "\$8" "\$9" "\$10}'
EOF

#安装man中文版本
sleep  1
rpm -q man-pages-zh-CN.noarch  &>/dev/null 
 if [ $? -ne 0   ]
    then  
    yum -y  install  man-pages-zh-CN.noarch &>/dev/null 
fi 

#进行内核调优
sleep 1
echo "正在进行内核调优！"
echo "
#CTCDN系统优化参数
#关闭ipv6
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
#决定检查过期多久邻居条目
net.ipv4.neigh.default.gc_stale_time=120
#使用arp_announce / arp_ignore解决ARP映射问题
net.ipv4.conf.default.arp_announce = 2
net.ipv4.conf.all.arp_announce=2
net.ipv4.conf.lo.arp_announce=2
# 避免放大攻击
net.ipv4.icmp_echo_ignore_broadcasts = 1
# 开启恶意icmp错误消息保护
net.ipv4.icmp_ignore_bogus_error_responses = 1
#关闭路由转发
net.ipv4.ip_forward = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0
#开启反向路径过滤
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1
#处理无源路由的包
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
#关闭sysrq功能
kernel.sysrq = 0
#core文件名中添加pid作为扩展名
kernel.core_uses_pid = 1
# 开启SYN洪水攻击保护
net.ipv4.tcp_syncookies = 1
#修改消息队列长度
kernel.msgmnb = 65536
kernel.msgmax = 65536
#设置最大内存共享段大小bytes
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
#timewait的数量，默认180000
net.ipv4.tcp_max_tw_buckets = 6000
net.ipv4.tcp_sack = 1
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rmem = 4096        87380   4194304
net.ipv4.tcp_wmem = 4096        16384   4194304
net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
#每个网络接口接收数据包的速率比内核处理这些包的速率快时，允许送到队列的数据包的最大数目
net.core.netdev_max_backlog = 262144
#限制仅仅是为了防止简单的DoS 攻击
net.ipv4.tcp_max_orphans = 3276800
#未收到客户端确认信息的连接请求的最大值
net.ipv4.tcp_max_syn_backlog = 262144
net.ipv4.tcp_timestamps = 0
#内核放弃建立连接之前发送SYNACK 包的数量
net.ipv4.tcp_synack_retries = 1
#内核放弃建立连接之前发送SYN 包的数量
net.ipv4.tcp_syn_retries = 1
#启用timewait 快速回收
net.ipv4.tcp_tw_recycle = 1
#开启重用。允许将TIME-WAIT sockets 重新用于新的TCP 连接
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_mem = 94500000 915000000 927000000
net.ipv4.tcp_fin_timeout = 1
#当keepalive 起用的时候，TCP 发送keepalive 消息的频度。缺省是2 小时
net.ipv4.tcp_keepalive_time = 1800
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl = 15
#允许系统打开的端口范围
net.ipv4.ip_local_port_range = 1024    65000
#修改防火墙表大小，默认65536
net.netfilter.nf_conntrack_max=655350
net.netfilter.nf_conntrack_tcp_timeout_established=1200
# 确保无人能修改路由表
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0 
" >/etc/sysctl.conf

sysctl -p &>/dev/null

#关闭服务器不需要的启动项
sleep 1
echo "正在关闭系统不要的开机启动项!"
 systemctl  disable abrt-oops  &>/dev/null 
 systemctl  disable abrt-vmcore &>/dev/null 
 systemctl  disable abrt-xorg  &>/dev/null
 systemctl  disable abrtd  &>/dev/null 
 systemctl  disable  dbus-org.freedesktop.NetworkManager.service  &>/dev/null 
 
#开启一些系统必要的启动项
 sleep 1
 echo  "正在开启一些系统必要启动项！"
 systemctl  enable  sshd   &>/dev/null 
 systemctl  enable  atd    &>/dev/null
 systemctl  enable  crond &>/dev/null 
 systemctl  enable  firewalld  &>/dev/null



