1\判断用户名文件的行数是否大于25，如果大于25，提示” row  above  25“，一行实现
2\截取一分钟的平均负载值，只取整数部分；
3\截取ip地址
4\统计链接状态 established 和 listen 的数量
5\判断用户名文件是否是20行，如果是，输出ok
6\统计所有进程所占的内存大小,并计算总和
7\删除文件前五行包含字母的行,使用sed实现
8\bash for循环打印下面这句话中字母书不大于6的单词。
9\用户输入数字，如股输入的是非数字，提示“Include nunumbers,retry please!”并结束，如果是纯数字，返回数字结果；
10\按照这样的日期格式（xxxx-xx-xx）每日生成一个文件，例如今天生成的文件为2013-09-23.log， 并且把磁盘的使用情况写到到这个文件中。
11\设计一个脚本，监控远程的一台机器(假设ip为192.168.116.101)的存活状态，当发现宕机时发一封邮件给你自己
12\写一个脚本，查看80端口是否开放，如果开放，什么也不做，如果不开放，重启 httpd 服务，并发送邮件给自己。 建立一个计划任务，每1分钟执行一次。
13\输入一个数字，然后运行对应的一个命令。显示命令如下：*cmd meau** 1---date 2--ls 3--who 4--pwd 当输入1时，会运行date, 输入2时运行ls, 依此类推。
14\添加user_00 - user_09 10个用户，并且给他们设置一个随机密码，密码要求10位包含大小写字母以及数字，注意需要把每个用户的密码记录到一个日志文件里。
15\请详细查看如下几个数字的规律，并使用shell脚本输出后面的十个数字。
10 31 53 77 105 141 .......
10 31 53 77 105 141
  21 22 24 28 36
    1  2  4  8
16\查看Linux系统中是否有自定义用户(普通用户)，若是有，一共几个
17\写一个shell脚本，检测所有磁盘分区使用率和inode使用率并记录到以当天日期为命名的日志文件里，当发现某个分区容量或者inode使用量大于85%时，发邮件通知你自己。
思路：就是先df -h 然后过滤出已使用的那一列，然后再想办法过滤出百分比的整数部分，然后和85去比较，同理，inode也是一样的思路。发邮件通知你自己，需要你的系统有smtp服务，可以安装 sendmail或者postfix，安装好后不用修改配置，启动服务就可以运行，发邮件使用命令：mail -s "主题" mailer < file.txt （这个文件就是邮件内容）。mail这个命令是安装mailx包得到的。
18\写一个shell脚本来看看你最喜欢敲的命令是哪个？然后列出你最喜欢敲的命令top10。
19\计算practice19.fujian中每行出现的数字个数并计算一下整个文档中一共出现了几个数字；例如如下内容：
	21461287dgajdaaf
	fagjfkasbjfksafsaa1241
20\打印等腰三角形
